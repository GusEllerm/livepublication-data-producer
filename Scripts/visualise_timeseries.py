import os
import rasterio
import matplotlib.pyplot as plt
from glob import glob
from matplotlib.widgets import Button

# === Configuration ===
base_dir = "./tiles_test_region"  # folder generated by get_timeseries.py
interval_dirs = sorted([d for d in os.listdir(base_dir) if os.path.isdir(os.path.join(base_dir, d))])

# === Load all image paths ===
images = []
for d in interval_dirs:
    ndvi_path = os.path.join(base_dir, d, "ndvi.tif")
    rgb_path = os.path.join(base_dir, d, "true_color.tif")
    if os.path.exists(ndvi_path) and os.path.exists(rgb_path):
        images.append((d, ndvi_path, rgb_path))

if not images:
    print("❌ No NDVI + RGB image pairs found.")
    exit(1)

# === Visualisation logic ===
index = 0
mode = "NDVI"  # or 'RGB'

def show():
    global index, mode
    plt.clf()
    interval, ndvi_path, rgb_path = images[index]

    with rasterio.open(ndvi_path) as ndvi_src, rasterio.open(rgb_path) as rgb_src:
        if mode == "NDVI":
            data = ndvi_src.read(1)
            plt.imshow(data, cmap="RdYlGn", vmin=-1, vmax=1)
            plt.title(f"NDVI — Interval {interval}")
        else:
            data = rgb_src.read([1, 2, 3])
            img = data.transpose(1, 2, 0)
            plt.imshow(img)
            plt.title(f"True Color — Interval {interval}")
        plt.axis("off")
        plt.draw()

def on_key(event):
    global index, mode
    if event.key == "right":
        index = (index + 1) % len(images)
        show()
    elif event.key == "left":
        index = (index - 1) % len(images)
        show()
    elif event.key == "t":
        mode = "RGB" if mode == "NDVI" else "NDVI"
        show()
    elif event.key == "escape":
        plt.close()

fig = plt.figure(figsize=(10, 6))
fig.canvas.mpl_connect("key_press_event", on_key)
show()
plt.show()
